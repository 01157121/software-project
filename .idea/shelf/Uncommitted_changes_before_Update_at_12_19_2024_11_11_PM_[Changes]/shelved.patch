Index: project_android/app/src/main/res/layout/activity_planning.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.drawerlayout.widget.DrawerLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n    <!-- 新增分帳按鈕 -->\r\n    <Button\r\n        android:id=\"@+id/add_accounting_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:text=\"@string/add_accounting\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        />\r\n    <!-- 檢視分帳紀錄 -->\r\n    <Button\r\n        android:id=\"@+id/check_accounting\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:text=\"@string/total_accounting\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/add_accounting_button\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        />\r\n    <!-- 浮動按鈕 -->\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/add_plan_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:src=\"@drawable/ic_add\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    <!-- 左上角的選單圖示 -->\r\n    <ImageView\r\n        android:id=\"@+id/menu_icon\"\r\n        android:layout_width=\"48dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:padding=\"12dp\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_marginStart=\"16dp\"\r\n        android:src=\"@drawable/ic_menu\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        android:contentDescription=\"Menu Icon\" />\r\n    <!-- 行程名稱 -->\r\n    <TextView\r\n        android:id=\"@+id/schedule_name_text\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:layout_marginTop=\"16dp\" />\r\n\r\n    <!-- 日期範圍 -->\r\n    <TextView\r\n        android:id=\"@+id/date_range_text\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/schedule_name_text\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:layout_marginTop=\"8dp\" />\r\n\r\n    <!-- 行程列表容器 -->\r\n    <LinearLayout\r\n        android:id=\"@+id/schedule_list_container\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:orientation=\"vertical\"\r\n        android:padding=\"16dp\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/date_range_text\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/add_plan_button\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n<com.google.android.material.navigation.NavigationView\r\nandroid:id=\"@+id/navigation_view\"\r\nandroid:layout_width=\"wrap_content\"\r\nandroid:layout_height=\"match_parent\"\r\nandroid:layout_gravity=\"start\"\r\napp:menu=\"@menu/drawer_menu\"\r\napp:headerLayout=\"@layout/drawer_header\" />\r\n    </androidx.drawerlayout.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/res/layout/activity_planning.xml b/project_android/app/src/main/res/layout/activity_planning.xml
--- a/project_android/app/src/main/res/layout/activity_planning.xml	
+++ b/project_android/app/src/main/res/layout/activity_planning.xml	
@@ -33,14 +33,14 @@
         app:layout_constraintEnd_toEndOf="parent"
         />
     <!-- 浮動按鈕 -->
-    <com.google.android.material.floatingactionbutton.FloatingActionButton
-        android:id="@+id/add_plan_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="16dp"
-        android:src="@drawable/ic_add"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent" />
+<!--    <com.google.android.material.floatingactionbutton.FloatingActionButton-->
+<!--        android:id="@+id/add_plan_button"-->
+<!--        android:layout_width="wrap_content"-->
+<!--        android:layout_height="wrap_content"-->
+<!--        android:layout_margin="16dp"-->
+<!--        android:src="@drawable/ic_add"-->
+<!--        app:layout_constraintBottom_toBottomOf="parent"-->
+<!--        app:layout_constraintEnd_toEndOf="parent" />-->
 
     <!-- 左上角的選單圖示 -->
     <ImageView
@@ -78,20 +78,58 @@
         android:layout_marginTop="8dp" />
 
     <!-- 行程列表容器 -->
-    <LinearLayout
-        android:id="@+id/schedule_list_container"
+<!--    <LinearLayout-->
+<!--        android:id="@+id/schedule_list_container"-->
+<!--        android:layout_width="0dp"-->
+<!--        android:layout_height="0dp"-->
+<!--        android:orientation="vertical"-->
+<!--        android:padding="16dp"-->
+<!--        app:layout_constraintTop_toBottomOf="@id/date_range_text"-->
+<!--        app:layout_constraintStart_toStartOf="parent"-->
+<!--        app:layout_constraintEnd_toEndOf="parent"-->
+<!--        app:layout_constraintBottom_toTopOf="@id/add_plan_button" />-->
+
+    <androidx.viewpager2.widget.ViewPager2
+        android:id="@+id/view_pager"
         android:layout_width="0dp"
         android:layout_height="0dp"
-        android:orientation="vertical"
-        android:padding="16dp"
         app:layout_constraintTop_toBottomOf="@id/date_range_text"
+        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/add_plan_button" />
+        app:layout_constraintEnd_toEndOf="parent" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
 
-<com.google.android.material.navigation.NavigationView
+<!--    <androidx.constraintlayout.widget.ConstraintLayout-->
+<!--        xmlns:android="http://schemas.android.com/apk/res/android"-->
+<!--        xmlns:app="http://schemas.android.com/apk/res-auto"-->
+<!--        xmlns:tools="http://schemas.android.com/tools"-->
+<!--        android:layout_width="match_parent"-->
+<!--        android:layout_height="match_parent"-->
+<!--        tools:context=".PlanningActivity">-->
+
+<!--        <TextView-->
+<!--            android:id="@+id/schedule_name_text"-->
+<!--            android:layout_width="wrap_content"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:textSize="20sp"-->
+<!--            app:layout_constraintTop_toTopOf="parent"-->
+<!--            app:layout_constraintStart_toStartOf="parent"-->
+<!--            android:padding="16dp" />-->
+
+<!--        <TextView-->
+<!--            android:id="@+id/date_range_text"-->
+<!--            android:layout_width="wrap_content"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            app:layout_constraintTop_toBottomOf="@id/schedule_name_text"-->
+<!--            app:layout_constraintStart_toStartOf="parent"-->
+<!--            android:padding="16dp" />-->
+
+
+<!--    </androidx.constraintlayout.widget.ConstraintLayout>-->
+
+
+    <com.google.android.material.navigation.NavigationView
 android:id="@+id/navigation_view"
 android:layout_width="wrap_content"
 android:layout_height="match_parent"
Index: project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_android\r\n\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.EditText\r\nimport android.widget.TableLayout\r\nimport android.widget.TableRow\r\nimport android.widget.TextView\r\nimport androidx.fragment.app.Fragment\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n//import com.example.project_android.PlanningActivity.scheduleName\r\n\r\nclass ScheduleFragment : Fragment() {\r\n\r\n    companion object {\r\n        private const val ARG_DATE = \"date\"\r\n\r\n        const val TAG = \"ScheduleFragment\"\r\n\r\n        fun newInstance(date: Date): ScheduleFragment {\r\n            val fragment = ScheduleFragment()\r\n            val args = Bundle()\r\n            args.putSerializable(ARG_DATE, date)\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n\r\n//        private const val ARG_PLAN_NAME = \"plan_name\"\r\n//        private const val ARG_SELECTED_DATE = \"selected_date\"\r\n//        private const val ARG_START_HOUR = \"start_hour\"\r\n//        private const val ARG_END_HOUR = \"end_hour\"\r\n//\r\n//        fun newInstance_create_plan(planName: String, selectedDate: String, startHour: Int, endHour: Int): ScheduleFragment {\r\n//            val fragment = ScheduleFragment()\r\n//            val args = Bundle().apply {\r\n//                putString(ARG_PLAN_NAME, planName)\r\n//                putString(ARG_SELECTED_DATE, selectedDate)\r\n//                putInt(ARG_START_HOUR, startHour)\r\n//                putInt(ARG_END_HOUR, endHour)\r\n//            }\r\n//            fragment.arguments = args\r\n//            return fragment\r\n//        }\r\n//\r\n////        fun newInstance_create_plan(testData: TestData) =\r\n////            ScheduleFragment().apply {\r\n////                arguments = Bundle().apply {\r\n////                    putString(\"name\", testData.name)\r\n////                    putString(\"content\", testData.content)\r\n////                }\r\n////            }\r\n////        fun newInstance(planName: String, selectedDate: String, startTime: String, endTime: String): ScheduleFragment {\r\n////            val fragment = ScheduleFragment()\r\n////            val args = Bundle().apply {\r\n////                putString(\"PLAN_NAME\", planName)\r\n////                putString(\"SELECTED_DATE\", selectedDate)\r\n////                putString(\"START_TIME\", startTime)\r\n////                putString(\"END_TIME\", endTime)\r\n////            }\r\n////            fragment.arguments = args\r\n////            return fragment\r\n////        }\r\n    }\r\n//\r\n////    private lateinit var testData: TestData\r\n////\r\n//    private lateinit var rootView: View\r\n////    private lateinit var test_text: TextView\r\n////\r\n////    override fun onCreate(savedInstanceState: Bundle?) {\r\n////        super.onCreate(savedInstanceState)\r\n////\r\n////        testData = TestData()\r\n////        arguments?.let {\r\n////            testData.name = it.getString(\"name\", \"\")\r\n////            testData.content = it.getString(\"content\", \"\")\r\n////        }\r\n////    }\r\n//\r\n//    override fun onCreateView(\r\n//        inflater: LayoutInflater, container: ViewGroup?,\r\n//        savedInstanceState: Bundle?\r\n//    ): View {\r\n//        rootView = inflater.inflate(R.layout.fragment_schedule, container, false)\r\n//\r\n////        test_text = rootView.findViewById(R.id.test_text)\r\n//\r\n//        return rootView\r\n//    }\r\n//\r\n//\r\n////    val planName = arguments?.getString(\"PLAN_NAME\")\r\n////    val selectedDate = arguments?.getString(\"SELECTED_DATE\")\r\n////    val startTime = arguments?.getString(\"START_TIME\")\r\n////    val endTime = arguments?.getString(\"END_TIME\")\r\n//\r\n//\r\n//    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n//        super.onViewCreated(view, savedInstanceState)\r\n//\r\n//        // 生成24小時排程\r\n//        val tableLayout = view.findViewById<TableLayout>(R.id.schedule_table)\r\n////        generateScheduleTable(tableLayout, 0, 23, \"行程名稱\")\r\n//\r\n////        val message = \"${testData.name}, ${testData.content}\"\r\n////        test_text.text = message\r\n////        // 從 Intent 中接收行程名稱和日期範圍\r\n////        val planName = intent.getStringExtra(\"PLAN_NAME\")\r\n////        val selectedDate = intent.getStringExtra(\"SELECTED_DATE\")\r\n////        val startTime = intent.getStringExtra(\"START_TIME\")\r\n////        val endTime = intent.getStringExtra(\"END_TIME\")\r\n//\r\n//        val planName = arguments?.getString(ARG_PLAN_NAME)\r\n//        val selectedDate = arguments?.getString(ARG_SELECTED_DATE)\r\n//        val startHour = arguments?.getInt(ARG_START_HOUR)\r\n//        val endHour = arguments?.getInt(ARG_END_HOUR)\r\n//\r\n//        if (startHour == null || endHour == null || planName == null){\r\n//            generateScheduleTable(tableLayout, 0, 23, \"行程名稱\")\r\n//        }else{\r\n//            val dialogView = layoutInflater.inflate(R.layout.fragment_schedule, null)\r\n//            val idTestText = dialogView.findViewById<TextView>(R.id.test_text)\r\n//            idTestText.text = planName\r\n////            generateScheduleTable(tableLayout, startHour, endHour, planName)\r\n//        }\r\n//\r\n//\r\n////        // 這裡你可以根據取得的資料來顯示或做其他處理\r\n////        val dateFormat = SimpleDateFormat(\"yyyy/MM/dd\", Locale.getDefault())\r\n////\r\n////        // 顯示計劃名稱\r\n////        val planTextView = view.findViewById<TextView>(R.id.plan_name_text)\r\n////        planTextView.text = planName\r\n////\r\n////        // 顯示選擇的日期\r\n////        val dateTextView = view.findViewById<TextView>(R.id.date_text)\r\n////        dateTextView.text = selectedDate\r\n////\r\n////        // 顯示起始時間與結束時間（如果需要）\r\n////        val timeTextView = view.findViewById<TextView>(R.id.time_range_text)\r\n////        timeTextView.text = \"$startTime - $endTime\"\r\n//\r\n//        // 獲取日期參數\r\n//        val date = arguments?.getSerializable(ARG_DATE) as? Date // 使用安全的轉換\r\n//        if (date == null) {\r\n//            // 如果日期是 null，可以顯示錯誤或使用當前日期\r\n//            val currentDate = Date() // 使用當前日期作為後備\r\n//            displayDate(currentDate, view)\r\n//        } else {\r\n//            displayDate(date, view)\r\n//        }\r\n//\r\n//\r\n//    }\r\n//\r\n//    private fun displayDate(date: Date, view: View) {\r\n//        val dateFormat = SimpleDateFormat(\"yyyy/MM/dd\", Locale.getDefault())\r\n//\r\n////        val planName = arguments?.get(\"String\")\r\n////        println(planName)\r\n//\r\n//        // 設定日期標題\r\n//        val dateTextView = view.findViewById<TextView>(R.id.date_text)\r\n//        dateTextView.text = dateFormat.format(date)\r\n//    }\r\n//\r\n//    // 生成24小時行程表\r\n//    private fun generateScheduleTable(tableLayout: TableLayout, startTime: Int, dayEndTime: Int, planName: String) {\r\n//\r\n//\r\n//        for (i in startTime..dayEndTime) {\r\n//            val tableRow = TableRow(context)\r\n//            val timeText = TextView(context).apply {\r\n//                text = String.format(\"%02d:00\", i) // 格式化時間顯示\r\n//            }\r\n//            tableRow.addView(timeText)\r\n//\r\n//            val eventText = EditText(context).apply {\r\n//                hint = planName\r\n//            }\r\n//            tableRow.addView(eventText)\r\n//\r\n//            tableLayout.addView(tableRow)\r\n//        }\r\n//    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt b/project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt
--- a/project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt	
+++ b/project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt	
@@ -8,6 +8,7 @@
 import android.widget.TableLayout
 import android.widget.TableRow
 import android.widget.TextView
+import androidx.appcompat.app.AppCompatActivity
 import androidx.fragment.app.Fragment
 import java.text.SimpleDateFormat
 import java.util.*
@@ -16,19 +17,30 @@
 
 class ScheduleFragment : Fragment() {
 
-    companion object {
-        private const val ARG_DATE = "date"
-
-        const val TAG = "ScheduleFragment"
-
-        fun newInstance(date: Date): ScheduleFragment {
-            val fragment = ScheduleFragment()
-            val args = Bundle()
-            args.putSerializable(ARG_DATE, date)
-            fragment.arguments = args
-            return fragment
-        }
+//    companion object {
+//        private const val ARG_DATE = "date"
+//
+//        const val TAG = "ScheduleFragment"
+//
+//        fun newInstance(date: Date): ScheduleFragment {
+//            val fragment = ScheduleFragment()
+//            val args = Bundle()
+//            args.putSerializable(ARG_DATE, date)
+//            fragment.arguments = args
+//            return fragment
+//        }
+        companion object {
+            fun newInstance(date: Date): ScheduleFragment {
+                val fragment = ScheduleFragment()
+                val args = Bundle()
+                args.putSerializable("DATE", date) // 傳遞 Date 參數
+                fragment.arguments = args
+                return fragment
+            }
 
+
+
+
 //        private const val ARG_PLAN_NAME = "plan_name"
 //        private const val ARG_SELECTED_DATE = "selected_date"
 //        private const val ARG_START_HOUR = "start_hour"
Index: project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_android\r\nimport android.app.DatePickerDialog\r\nimport android.app.TimePickerDialog\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.Gravity\r\nimport android.view.View\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton\r\nimport com.google.android.material.navigation.NavigationView\r\nimport java.text.ParseException\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass PlanningActivity : AppCompatActivity() {\r\n    private lateinit var viewPager: ViewPager2\r\n    private lateinit var scheduleNameTextView: TextView\r\n    private lateinit var dateRangeTextView: TextView\r\n    private val dateList: MutableList<Date> = mutableListOf()\r\n    private lateinit var drawerLayout: DrawerLayout\r\n    private lateinit var navigationView: NavigationView\r\n    private lateinit var addButton: FloatingActionButton\r\n    private lateinit var addAccountingButton: Button\r\n\r\n    var startHour: Int = 0\r\n    var startMinute: Int = 0\r\n    var endHour: Int = 0\r\n    var endMinute: Int = 0\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_planning)\r\n\r\n        // 接收 Intent 数据\r\n        val scheduleName = intent.getStringExtra(\"SCHEDULE_NAME\")\r\n        val startDateStr = intent.getStringExtra(\"START_DATE\")\r\n        val endDateStr = intent.getStringExtra(\"END_DATE\")\r\n        val members = intent.getStringArrayListExtra(\"MEMBERS_LIST\")\r\n\r\n        // 初始化 UI 元素\r\n        scheduleNameTextView = findViewById(R.id.schedule_name_text)\r\n        dateRangeTextView = findViewById(R.id.date_range_text)\r\n        drawerLayout = findViewById(R.id.drawer_layout)\r\n        navigationView = findViewById(R.id.navigation_view)\r\n        addButton = findViewById(R.id.add_plan_button)\r\n        addAccountingButton = findViewById(R.id.add_accounting_button)\r\n\r\n        val dateFormat = SimpleDateFormat(\"yyyy/MM/dd\", Locale.getDefault())\r\n        try {\r\n            val startDate = dateFormat.parse(startDateStr)\r\n            val endDate = dateFormat.parse(endDateStr)\r\n            generateDateRange(startDate, endDate)\r\n\r\n            scheduleNameTextView.text = scheduleName\r\n            dateRangeTextView.text = \"${dateFormat.format(startDate)} - ${dateFormat.format(endDate)}\"\r\n        } catch (e: ParseException) {\r\n            e.printStackTrace()\r\n        }\r\n\r\n        val scheduleListContainer = findViewById<LinearLayout>(R.id.schedule_list_container)\r\n\r\n        // 新增计划\r\n        addButton.setOnClickListener {\r\n            showCreatePlan(scheduleListContainer)\r\n        }\r\n\r\n        // 新增分账功能\r\n        addAccountingButton.setOnClickListener {\r\n            addAccounting(scheduleListContainer)\r\n        }\r\n\r\n        // 导航菜单点击事件\r\n        setupNavigationMenu()\r\n    }\r\n\r\n    private fun generateDateRange(startDate: Date?, endDate: Date?) {\r\n        if (startDate == null || endDate == null) return\r\n        val calendar = Calendar.getInstance()\r\n        calendar.time = startDate\r\n\r\n        while (calendar.time.before(endDate) || calendar.time == endDate) {\r\n            dateList.add(calendar.time)\r\n            calendar.add(Calendar.DAY_OF_YEAR, 1)\r\n        }\r\n    }\r\n\r\n    private fun showCreatePlan(container: LinearLayout) {\r\n        val dialogView = layoutInflater.inflate(R.layout.dialog_create_plan, null)\r\n\r\n        val dateButton: Button = dialogView.findViewById(R.id.date_button)\r\n        val startTimeButton: Button = dialogView.findViewById(R.id.start_time_button)\r\n        val endTimeButton: Button = dialogView.findViewById(R.id.end_time_button)\r\n\r\n        dateButton.setOnClickListener {\r\n            showDatePickerDialog { selectedDate ->\r\n                dialogView.findViewById<TextView>(R.id.date_button_text).text = selectedDate\r\n            }\r\n        }\r\n\r\n        startTimeButton.setOnClickListener {\r\n            showTimePickerDialog { hour, minute ->\r\n                startHour = hour\r\n                startMinute = minute\r\n                dialogView.findViewById<TextView>(R.id.start_time_button_text).text =\r\n                    String.format(\"%02d:%02d\", hour, minute)\r\n            }\r\n        }\r\n\r\n        endTimeButton.setOnClickListener {\r\n            showTimePickerDialog { hour, minute ->\r\n                endHour = hour\r\n                endMinute = minute\r\n                dialogView.findViewById<TextView>(R.id.end_time_button_text).text =\r\n                    String.format(\"%02d:%02d\", hour, minute)\r\n            }\r\n        }\r\n\r\n        val dialog = androidx.appcompat.app.AlertDialog.Builder(this)\r\n            .setTitle(\"新增行程\")\r\n            .setView(dialogView)\r\n            .setPositiveButton(\"新增\") { _, _ ->\r\n                val planName = dialogView.findViewById<EditText>(R.id.plan_name).text.toString()\r\n                val selectedDate = dialogView.findViewById<TextView>(R.id.date_button_text).text.toString()\r\n                addScheduleToContainer(container, planName, selectedDate)\r\n            }\r\n            .setNegativeButton(\"取消\", null)\r\n            .create()\r\n\r\n        dialog.show()\r\n    }\r\n\r\n    private fun addScheduleToContainer(container: LinearLayout, planName: String, date: String) {\r\n        val scheduleView = layoutInflater.inflate(R.layout.activity_planning_part_of_item, container, false)\r\n\r\n        scheduleView.findViewById<TextView>(R.id.plan_name_text).text = planName\r\n        scheduleView.findViewById<TextView>(R.id.date_text).text = date\r\n        scheduleView.findViewById<TextView>(R.id.time_range_text).text =\r\n            String.format(\"%02d:%02d-%02d:%02d\", startHour, startMinute, endHour, endMinute)\r\n\r\n        container.addView(scheduleView)\r\n    }\r\n\r\n    private fun showDatePickerDialog(onDateSelected: (String) -> Unit) {\r\n        val calendar = Calendar.getInstance()\r\n        DatePickerDialog(this, { _, year, month, day ->\r\n            onDateSelected(\"$year/${month + 1}/$day\")\r\n        }, calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH)).show()\r\n    }\r\n\r\n    private fun showTimePickerDialog(onTimeSelected: (Int, Int) -> Unit) {\r\n        val calendar = Calendar.getInstance()\r\n        TimePickerDialog(this, { _, hour, minute ->\r\n            onTimeSelected(hour, minute)\r\n        }, calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE), true).show()\r\n    }\r\n\r\n    private fun setupNavigationMenu() {\r\n        findViewById<ImageView>(R.id.menu_icon).setOnClickListener {\r\n            drawerLayout.openDrawer(Gravity.START)\r\n        }\r\n\r\n        navigationView.setNavigationItemSelectedListener { menuItem ->\r\n            when (menuItem.itemId) {\r\n                R.id.nav_user_list -> showUserList()\r\n                R.id.nav_save -> saveSchedule()\r\n                R.id.nav_export -> exportSchedule()\r\n                R.id.nav_home -> goToHomePage()\r\n            }\r\n            drawerLayout.closeDrawer(Gravity.START)\r\n            true\r\n        }\r\n    }\r\n\r\n    private fun showUserList() {\r\n        val intent = Intent(this, UserListActivity::class.java)\r\n        startActivity(intent)\r\n    }\r\n\r\n    private fun saveSchedule() {\r\n        // 保存行程\r\n    }\r\n\r\n    private fun exportSchedule() {\r\n        // 导出行程\r\n    }\r\n\r\n    private fun goToHomePage() {\r\n        val intent = Intent(this, LobbyActivity::class.java)\r\n        startActivity(intent)\r\n        finish()\r\n    }\r\n\r\n    private fun addAccounting(container: LinearLayout) {\r\n        // 分账功能实现\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt b/project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt
--- a/project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt	
+++ b/project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt	
@@ -1,4 +1,5 @@
 package com.example.project_android
+import DatePageAdapter
 import android.app.DatePickerDialog
 import android.app.TimePickerDialog
 import android.content.Intent
@@ -8,6 +9,10 @@
 import android.widget.*
 import androidx.appcompat.app.AppCompatActivity
 import androidx.drawerlayout.widget.DrawerLayout
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.FragmentManager
+import androidx.lifecycle.Lifecycle
+import androidx.viewpager2.adapter.FragmentStateAdapter
 import androidx.viewpager2.widget.ViewPager2
 import com.google.android.material.floatingactionbutton.FloatingActionButton
 import com.google.android.material.navigation.NavigationView
@@ -15,6 +20,7 @@
 import java.text.SimpleDateFormat
 import java.util.*
 
+
 class PlanningActivity : AppCompatActivity() {
     private lateinit var viewPager: ViewPager2
     private lateinit var scheduleNameTextView: TextView
@@ -33,19 +39,19 @@
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_planning)
-
+//
         // 接收 Intent 数据
         val scheduleName = intent.getStringExtra("SCHEDULE_NAME")
         val startDateStr = intent.getStringExtra("START_DATE")
         val endDateStr = intent.getStringExtra("END_DATE")
         val members = intent.getStringArrayListExtra("MEMBERS_LIST")
-
-        // 初始化 UI 元素
+//
+//        // 初始化 UI 元素
         scheduleNameTextView = findViewById(R.id.schedule_name_text)
         dateRangeTextView = findViewById(R.id.date_range_text)
         drawerLayout = findViewById(R.id.drawer_layout)
         navigationView = findViewById(R.id.navigation_view)
-        addButton = findViewById(R.id.add_plan_button)
+//        addButton = findViewById(R.id.add_plan_button)
         addAccountingButton = findViewById(R.id.add_accounting_button)
 
         val dateFormat = SimpleDateFormat("yyyy/MM/dd", Locale.getDefault())
@@ -63,9 +69,9 @@
         val scheduleListContainer = findViewById<LinearLayout>(R.id.schedule_list_container)
 
         // 新增计划
-        addButton.setOnClickListener {
-            showCreatePlan(scheduleListContainer)
-        }
+//        addButton.setOnClickListener {
+//            showCreatePlan(scheduleListContainer)
+//        }
 
         // 新增分账功能
         addAccountingButton.setOnClickListener {
@@ -74,6 +80,40 @@
 
         // 导航菜单点击事件
         setupNavigationMenu()
+
+
+
+//        // 初始化 UI 元素
+//        viewPager = findViewById(R.id.view_pager)
+//
+//        viewPager = findViewById(R.id.view_pager)
+//
+//        val dateList: MutableList<Date> = mutableListOf()
+//        // dateList 添加日期的邏輯保持不變
+//        val adapter = PlanningPagerAdapter(dateList, supportFragmentManager, lifecycle)
+//        viewPager.adapter = adapter
+
+        val viewPager: ViewPager2 = findViewById(R.id.view_pager)
+
+        // 定義日期範圍
+        val activityDateFormat = SimpleDateFormat("yyyy/MM/dd", Locale.getDefault())
+        val startDate = activityDateFormat.parse(startDateStr)!! // 開始日期
+        val endDate = activityDateFormat.parse(endDateStr)!!   // 結束日期
+
+        // 設定 Adapter
+        val adapter = DatePageAdapter(this, startDate, endDate)
+
+        viewPager.adapter = adapter
+
+//        // 將初始頁面設定為中間位置，對應今天
+//        viewPager.setCurrentItem(Int.MAX_VALUE / 2, false)
+
+        // 設定初始頁為今天
+        val today = Date()
+        val todayIndex = ((today.time - startDate.time) / (1000 * 60 * 60 * 24)).toInt()
+        if (todayIndex in 0 until adapter.itemCount) {
+            viewPager.setCurrentItem(todayIndex, false)
+        }
     }
 
     private fun generateDateRange(startDate: Date?, endDate: Date?) {
@@ -85,6 +125,23 @@
             dateList.add(calendar.time)
             calendar.add(Calendar.DAY_OF_YEAR, 1)
         }
+
+//        // 從 Intent 中獲取日期參數，並提供默認值
+//        val startDateStr = intent.getStringExtra("START_DATE") ?: "2024/01/01"
+//        val endDateStr = intent.getStringExtra("END_DATE") ?: "2024/01/07"
+//
+//        while (calendar.time.before(endDate) || calendar.time == endDate) {
+////            dateList.add(SimpleDateFormat("yyyy/MM/dd", Locale.getDefault()).format(calendar.time))
+////            calendar.add(Calendar.DAY_OF_YEAR, 1)
+//            val dateFormat = SimpleDateFormat("yyyy/MM/dd", Locale.getDefault())
+//            val startDate = dateFormat.parse(startDateStr) // String -> Date
+//            val endDate = dateFormat.parse(endDateStr)
+//
+//            if (startDate != null && endDate != null) {
+//                generateDateRange(startDate, endDate)
+//            }
+//
+//        }
     }
 
     private fun showCreatePlan(container: LinearLayout) {
@@ -197,3 +254,5 @@
         // 分账功能实现
     }
 }
+
+
Index: project_android/app/src/main/res/layout/item_date_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/res/layout/item_date_page.xml b/project_android/app/src/main/res/layout/item_date_page.xml
new file mode 100644
--- /dev/null	
+++ b/project_android/app/src/main/res/layout/item_date_page.xml	
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.drawerlayout.widget.DrawerLayout
+xmlns:android="http://schemas.android.com/apk/res/android"
+xmlns:app="http://schemas.android.com/apk/res-auto"
+xmlns:tools="http://schemas.android.com/tools"
+android:id="@+id/drawer_layout"
+android:layout_width="match_parent"
+android:layout_height="match_parent">
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/date_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Date"
+        android:textSize="24sp"
+        android:layout_gravity="center"
+        android:textAlignment="center"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"/>
+
+    <!-- ScrollView 包裹行程列表 -->
+    <ScrollView
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintTop_toBottomOf="@id/date_text"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintBottom_toTopOf="@id/add_button">
+
+        <LinearLayout
+            android:id="@+id/schedule_list_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp" />
+    </ScrollView>
+
+    <!-- 浮動按鈕 -->
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/add_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="16dp"
+        android:src="@drawable/ic_add"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+
+<!--    &lt;!&ndash; 行程列表容器 &ndash;&gt;-->
+<!--    <LinearLayout-->
+<!--        android:id="@+id/schedule_list_container"-->
+<!--        android:layout_width="0dp"-->
+<!--        android:layout_height="0dp"-->
+<!--        android:orientation="vertical"-->
+<!--        android:padding="16dp"-->
+<!--        app:layout_constraintTop_toBottomOf="@id/date_text"-->
+<!--        app:layout_constraintStart_toStartOf="parent"-->
+<!--        app:layout_constraintEnd_toEndOf="parent"-->
+<!--        app:layout_constraintBottom_toTopOf="@id/add_button" />-->
+
+<!--    <androidx.viewpager2.widget.ViewPager2-->
+<!--        android:id="@+id/view_pager"-->
+<!--        android:layout_width="0dp"-->
+<!--        android:layout_height="0dp"-->
+<!--        app:layout_constraintTop_toBottomOf="@id/date_text"-->
+<!--        app:layout_constraintBottom_toBottomOf="parent"-->
+<!--        app:layout_constraintStart_toStartOf="parent"-->
+<!--        app:layout_constraintEnd_toEndOf="parent" />-->
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+
+<!--    <androidx.constraintlayout.widget.ConstraintLayout-->
+<!--        xmlns:android="http://schemas.android.com/apk/res/android"-->
+<!--        xmlns:app="http://schemas.android.com/apk/res-auto"-->
+<!--        xmlns:tools="http://schemas.android.com/tools"-->
+<!--        android:layout_width="match_parent"-->
+<!--        android:layout_height="match_parent"-->
+<!--        tools:context=".PlanningActivity">-->
+
+<!--        <TextView-->
+<!--            android:id="@+id/schedule_name_text"-->
+<!--            android:layout_width="wrap_content"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:textSize="20sp"-->
+<!--            app:layout_constraintTop_toTopOf="parent"-->
+<!--            app:layout_constraintStart_toStartOf="parent"-->
+<!--            android:padding="16dp" />-->
+
+<!--        <TextView-->
+<!--            android:id="@+id/date_range_text"-->
+<!--            android:layout_width="wrap_content"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            app:layout_constraintTop_toBottomOf="@id/schedule_name_text"-->
+<!--            app:layout_constraintStart_toStartOf="parent"-->
+<!--            android:padding="16dp" />-->
+
+
+<!--    </androidx.constraintlayout.widget.ConstraintLayout>-->
+
+
+<com.google.android.material.navigation.NavigationView
+    android:id="@+id/navigation_view"
+    android:layout_width="wrap_content"
+    android:layout_height="match_parent"
+    android:layout_gravity="start"
+    app:menu="@menu/drawer_menu"
+    app:headerLayout="@layout/drawer_header" />
+</androidx.drawerlayout.widget.DrawerLayout>
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/deploymentTargetSelector.xml	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetSelector">
+    <selectionStates>
+      <SelectionState runConfigName="project_android.app">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+    </selectionStates>
+  </component>
+</project>
\ No newline at end of file
Index: project_android/app/src/main/java/com/example/project_android/PlanningPagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/java/com/example/project_android/PlanningPagerAdapter.kt b/project_android/app/src/main/java/com/example/project_android/PlanningPagerAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/project_android/app/src/main/java/com/example/project_android/PlanningPagerAdapter.kt	
@@ -0,0 +1,20 @@
+//package com.example.project_android
+//
+//import androidx.fragment.app.Fragment
+//import androidx.fragment.app.FragmentManager
+//import androidx.lifecycle.Lifecycle
+//import androidx.viewpager2.adapter.FragmentStateAdapter
+//import java.util.Date
+//
+//class PlanningPagerAdapter(
+//    private val dates: List<Date>,
+//    fragmentManager: FragmentManager,
+//    lifecycle: Lifecycle
+//) : FragmentStateAdapter(fragmentManager, lifecycle) {
+//
+//    override fun getItemCount(): Int = dates.size
+//
+//    override fun createFragment(position: Int): Fragment {
+//        return ScheduleFragment.newInstance(dates[position])
+//    }
+//}
Index: project_android/app/src/main/java/com/example/project_android/DatePageAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/java/com/example/project_android/DatePageAdapter.kt b/project_android/app/src/main/java/com/example/project_android/DatePageAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/project_android/app/src/main/java/com/example/project_android/DatePageAdapter.kt	
@@ -0,0 +1,201 @@
+import android.app.DatePickerDialog
+import android.app.TimePickerDialog
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Button
+import android.widget.EditText
+import android.widget.LinearLayout
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.example.project_android.R
+import com.google.android.material.floatingactionbutton.FloatingActionButton
+import java.text.SimpleDateFormat
+import java.util.*
+
+class DatePageAdapter(
+//    private val context: Context,
+//    private val startDate: Date
+//) : RecyclerView.Adapter<DatePageAdapter.DateViewHolder>() {
+//
+//    private val dateFormat = SimpleDateFormat("yyyy-MM-dd", Locale.getDefault())
+//
+//    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): DateViewHolder {
+//        val view = LayoutInflater.from(context).inflate(R.layout.item_date_page, parent, false)
+//        return DateViewHolder(view)
+//    }
+//
+//    override fun onBindViewHolder(holder: DateViewHolder, position: Int) {
+//        val currentDate = getDateForPosition(position)
+//        holder.dateTextView.text = dateFormat.format(currentDate)
+//
+//        // 按鈕用於測試行程新增功能
+//        holder.addButton.setOnClickListener {
+//            holder.scheduleTextView.text = "新增行程: ${dateFormat.format(currentDate)}"
+//        }
+//    }
+//
+//    override fun getItemCount(): Int = Int.MAX_VALUE // 支援無限日期
+//
+//    private fun getDateForPosition(position: Int): Date {
+//        val calendar = Calendar.getInstance()
+//        calendar.time = startDate
+//        calendar.add(Calendar.DAY_OF_YEAR, position - Int.MAX_VALUE / 2) // 以中間位置為今天
+//        return calendar.time
+//    }
+//
+//    inner class DateViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+//        val dateTextView: TextView = view.findViewById(R.id.date_text)
+//        val addButton: Button = view.findViewById(R.id.add_button)
+//        val scheduleTextView: TextView = view.findViewById(R.id.schedule_text)
+//    }
+
+    private val context: Context,
+    private val startDate: Date,
+    private val endDate: Date
+) : RecyclerView.Adapter<DatePageAdapter.DateViewHolder>() {
+
+    private val adapterDateFormat = SimpleDateFormat("yyyy-MM-dd", Locale.getDefault())
+    private val totalDays: Int
+
+    init {
+        val calendar = Calendar.getInstance()
+        calendar.time = startDate
+        val startTime = calendar.timeInMillis
+
+        calendar.time = endDate
+        val endTime = calendar.timeInMillis
+
+        totalDays = ((endTime - startTime) / (1000 * 60 * 60 * 24)).toInt() + 1 // 包含當天
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): DateViewHolder {
+        val view = LayoutInflater.from(context).inflate(R.layout.item_date_page, parent, false)
+        return DateViewHolder(view)
+    }
+
+    // 新增行程
+    override fun onBindViewHolder(holder: DateViewHolder, position: Int) {
+//        val currentDate = getDateForPosition(position)
+//        holder.dateTextView.text = adapterDateFormat.format(currentDate)
+//
+//        holder.addButton.setOnClickListener {
+//            holder.scheduleTextView.text = "新增行程: ${adapterDateFormat.format(currentDate)}"
+//        }
+        val currentDate = getDateForPosition(position)
+        holder.dateTextView.text = adapterDateFormat.format(currentDate)
+
+        // 新增行程的按鈕點擊事件
+        holder.addButton.setOnClickListener {
+            // 呼叫 showCreatePlan 函式來顯示對話框
+            showCreatePlan(currentDate, holder)
+        }
+    }
+
+    override fun getItemCount(): Int = totalDays
+
+    private fun getDateForPosition(position: Int): Date {
+        val calendar = Calendar.getInstance()
+        calendar.time = startDate
+        calendar.add(Calendar.DAY_OF_YEAR, position)
+        return calendar.time
+    }
+
+    private fun showCreatePlan(selectedDate: Date, holder: DateViewHolder) {
+        // 顯示行程創建對話框
+        val dialogView = LayoutInflater.from(context).inflate(R.layout.dialog_create_plan, null)
+
+        val dateButton: Button = dialogView.findViewById(R.id.date_button)
+        val startTimeButton: Button = dialogView.findViewById(R.id.start_time_button)
+        val endTimeButton: Button = dialogView.findViewById(R.id.end_time_button)
+
+        val dateFormat = SimpleDateFormat("yyyy/MM/dd", Locale.getDefault())
+        dateButton.text = dateFormat.format(selectedDate)
+
+        var startHour = 0
+        var startMinute = 0
+        var endHour = 0
+        var endMinute = 0
+
+        dateButton.setOnClickListener {
+            // 顯示日期選擇器
+            showDatePickerDialog { selectedDate ->
+                dateButton.text = selectedDate
+            }
+        }
+
+        startTimeButton.setOnClickListener {
+            // 顯示時間選擇器
+            showTimePickerDialog { hour, minute ->
+                startHour = hour
+                startMinute = minute
+                startTimeButton.text = String.format("%02d:%02d", hour, minute)
+            }
+        }
+
+        endTimeButton.setOnClickListener {
+            // 顯示時間選擇器
+            showTimePickerDialog { hour, minute ->
+                endHour = hour
+                endMinute = minute
+                endTimeButton.text = String.format("%02d:%02d", hour, minute)
+            }
+        }
+
+        val dialog = androidx.appcompat.app.AlertDialog.Builder(context)
+            .setTitle("新增行程")
+            .setView(dialogView)
+            .setPositiveButton("新增") { _, _ ->
+                val planName = dialogView.findViewById<EditText>(R.id.plan_name).text.toString()
+                addScheduleToContainer(planName, selectedDate, startHour, startMinute, endHour, endMinute, holder)
+            }
+            .setNegativeButton("取消", null)
+            .create()
+
+        dialog.show()
+    }
+
+    private fun showDatePickerDialog(onDateSelected: (String) -> Unit) {
+        val calendar = Calendar.getInstance()
+        DatePickerDialog(context, { _, year, month, day ->
+            onDateSelected("$year/${month + 1}/$day")
+        }, calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.get(Calendar.DAY_OF_MONTH)).show()
+    }
+
+    private fun showTimePickerDialog(onTimeSelected: (Int, Int) -> Unit) {
+        val calendar = Calendar.getInstance()
+        TimePickerDialog(context, { _, hour, minute ->
+            onTimeSelected(hour, minute)
+        }, calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE), true).show()
+    }
+
+    private fun addScheduleToContainer(planName: String, selectedDate: Date, startHour: Int, startMinute: Int, endHour: Int, endMinute: Int,  holder: DateViewHolder) {
+        // 此處可以新增行程到相應容器
+        // 例如可以發送廣播或更新 UI
+        // 格式化行程文字
+        val scheduleText = "$planName - ${String.format("%02d:%02d", startHour, startMinute)} - ${String.format("%02d:%02d", endHour, endMinute)}"
+
+//        // 將行程顯示在對應的 TextView 中
+//        val currentText = holder.scheduleTextView.text.toString()
+//        val updatedText = "$currentText\n$scheduleText"
+//        holder.scheduleTextView.text = updatedText
+
+        // 創建新的 TextView 動態添加
+        val newScheduleView = TextView(context).apply {
+            text = scheduleText
+            textSize = 16f
+            setPadding(8, 8, 8, 8)
+        }
+
+        // 將 TextView 添加到行程列表容器中
+        holder.scheduleListContainer.addView(newScheduleView)
+    }
+
+
+    inner class DateViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        val dateTextView: TextView = view.findViewById(R.id.date_text)
+        val addButton: FloatingActionButton = view.findViewById(R.id.add_button)
+        val scheduleListContainer: LinearLayout = view.findViewById(R.id.schedule_list_container)
+    }
+}
Index: .idea/caches/deviceStreaming.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DeviceStreaming\">\r\n    <option name=\"deviceSelectionList\">\r\n      <list>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"27\" />\r\n          <option name=\"brand\" value=\"DOCOMO\" />\r\n          <option name=\"codename\" value=\"F01L\" />\r\n          <option name=\"id\" value=\"F01L\" />\r\n          <option name=\"manufacturer\" value=\"FUJITSU\" />\r\n          <option name=\"name\" value=\"F-01L\" />\r\n          <option name=\"screenDensity\" value=\"360\" />\r\n          <option name=\"screenX\" value=\"720\" />\r\n          <option name=\"screenY\" value=\"1280\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"28\" />\r\n          <option name=\"brand\" value=\"DOCOMO\" />\r\n          <option name=\"codename\" value=\"SH-01L\" />\r\n          <option name=\"id\" value=\"SH-01L\" />\r\n          <option name=\"manufacturer\" value=\"SHARP\" />\r\n          <option name=\"name\" value=\"AQUOS sense2 SH-01L\" />\r\n          <option name=\"screenDensity\" value=\"480\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2160\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"Lenovo\" />\r\n          <option name=\"codename\" value=\"TB370FU\" />\r\n          <option name=\"id\" value=\"TB370FU\" />\r\n          <option name=\"manufacturer\" value=\"Lenovo\" />\r\n          <option name=\"name\" value=\"Tab P12\" />\r\n          <option name=\"screenDensity\" value=\"340\" />\r\n          <option name=\"screenX\" value=\"1840\" />\r\n          <option name=\"screenY\" value=\"2944\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"31\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"a51\" />\r\n          <option name=\"id\" value=\"a51\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy A51\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"akita\" />\r\n          <option name=\"id\" value=\"akita\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 8a\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"b0q\" />\r\n          <option name=\"id\" value=\"b0q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy S22 Ultra\" />\r\n          <option name=\"screenDensity\" value=\"600\" />\r\n          <option name=\"screenX\" value=\"1440\" />\r\n          <option name=\"screenY\" value=\"3088\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"32\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"bluejay\" />\r\n          <option name=\"id\" value=\"bluejay\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 6a\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"caiman\" />\r\n          <option name=\"id\" value=\"caiman\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9 Pro\" />\r\n          <option name=\"screenDensity\" value=\"360\" />\r\n          <option name=\"screenX\" value=\"960\" />\r\n          <option name=\"screenY\" value=\"2142\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"comet\" />\r\n          <option name=\"id\" value=\"comet\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9 Pro Fold\" />\r\n          <option name=\"screenDensity\" value=\"390\" />\r\n          <option name=\"screenX\" value=\"2076\" />\r\n          <option name=\"screenY\" value=\"2152\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"29\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"crownqlteue\" />\r\n          <option name=\"id\" value=\"crownqlteue\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Note9\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2220\" />\r\n          <option name=\"screenY\" value=\"1080\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"dm3q\" />\r\n          <option name=\"id\" value=\"dm3q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy S23 Ultra\" />\r\n          <option name=\"screenDensity\" value=\"600\" />\r\n          <option name=\"screenX\" value=\"1440\" />\r\n          <option name=\"screenY\" value=\"3088\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"e1q\" />\r\n          <option name=\"id\" value=\"e1q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy S24\" />\r\n          <option name=\"screenDensity\" value=\"480\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2340\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"felix\" />\r\n          <option name=\"id\" value=\"felix\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Fold\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2208\" />\r\n          <option name=\"screenY\" value=\"1840\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"felix\" />\r\n          <option name=\"id\" value=\"felix\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Fold\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2208\" />\r\n          <option name=\"screenY\" value=\"1840\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"felix_camera\" />\r\n          <option name=\"id\" value=\"felix_camera\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Fold (Camera-enabled)\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2208\" />\r\n          <option name=\"screenY\" value=\"1840\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"gts8uwifi\" />\r\n          <option name=\"id\" value=\"gts8uwifi\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Tab S8 Ultra\" />\r\n          <option name=\"screenDensity\" value=\"320\" />\r\n          <option name=\"screenX\" value=\"1848\" />\r\n          <option name=\"screenY\" value=\"2960\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"husky\" />\r\n          <option name=\"id\" value=\"husky\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 8 Pro\" />\r\n          <option name=\"screenDensity\" value=\"390\" />\r\n          <option name=\"screenX\" value=\"1008\" />\r\n          <option name=\"screenY\" value=\"2244\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"30\" />\r\n          <option name=\"brand\" value=\"motorola\" />\r\n          <option name=\"codename\" value=\"java\" />\r\n          <option name=\"id\" value=\"java\" />\r\n          <option name=\"manufacturer\" value=\"Motorola\" />\r\n          <option name=\"name\" value=\"G20\" />\r\n          <option name=\"screenDensity\" value=\"280\" />\r\n          <option name=\"screenX\" value=\"720\" />\r\n          <option name=\"screenY\" value=\"1600\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"komodo\" />\r\n          <option name=\"id\" value=\"komodo\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9 Pro XL\" />\r\n          <option name=\"screenDensity\" value=\"360\" />\r\n          <option name=\"screenX\" value=\"1008\" />\r\n          <option name=\"screenY\" value=\"2244\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"lynx\" />\r\n          <option name=\"id\" value=\"lynx\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 7a\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"31\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"oriole\" />\r\n          <option name=\"id\" value=\"oriole\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 6\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"panther\" />\r\n          <option name=\"id\" value=\"panther\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 7\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"q5q\" />\r\n          <option name=\"id\" value=\"q5q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Z Fold5\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1812\" />\r\n          <option name=\"screenY\" value=\"2176\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"q6q\" />\r\n          <option name=\"id\" value=\"q6q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Z Fold6\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1856\" />\r\n          <option name=\"screenY\" value=\"2160\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"30\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"r11\" />\r\n          <option name=\"id\" value=\"r11\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Watch\" />\r\n          <option name=\"screenDensity\" value=\"320\" />\r\n          <option name=\"screenX\" value=\"384\" />\r\n          <option name=\"screenY\" value=\"384\" />\r\n          <option name=\"type\" value=\"WEAR_OS\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"30\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"redfin\" />\r\n          <option name=\"id\" value=\"redfin\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 5\" />\r\n          <option name=\"screenDensity\" value=\"440\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2340\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"shiba\" />\r\n          <option name=\"id\" value=\"shiba\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 8\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"tangorpro\" />\r\n          <option name=\"id\" value=\"tangorpro\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Tablet\" />\r\n          <option name=\"screenDensity\" value=\"320\" />\r\n          <option name=\"screenX\" value=\"1600\" />\r\n          <option name=\"screenY\" value=\"2560\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"tokay\" />\r\n          <option name=\"id\" value=\"tokay\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2424\" />\r\n        </PersistentDeviceSelectionData>\r\n      </list>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/caches/deviceStreaming.xml b/.idea/caches/deviceStreaming.xml
--- a/.idea/caches/deviceStreaming.xml	
+++ b/.idea/caches/deviceStreaming.xml	
@@ -15,6 +15,17 @@
           <option name="screenY" value="1280" />
         </PersistentDeviceSelectionData>
         <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="OPPO" />
+          <option name="codename" value="OP573DL1" />
+          <option name="id" value="OP573DL1" />
+          <option name="manufacturer" value="OPPO" />
+          <option name="name" value="CPH2557" />
+          <option name="screenDensity" value="480" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
           <option name="api" value="28" />
           <option name="brand" value="DOCOMO" />
           <option name="codename" value="SH-01L" />
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e29f201f-91af-40b8-b183-779ee5b41cc2\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/SchedulePagerAdapter.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/SchedulePagerAdapter.kt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2p1lBTlroLsjilk1EAIkZutoISF\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"git-widget-placeholder\": \"newbranch\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/huapi/OneDrive/Documents/GitHub/software-project\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e29f201f-91af-40b8-b183-779ee5b41cc2\" name=\"Changes\" comment=\"\" />\r\n      <created>1731941327363</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1731941327363</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,11 +1,43 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AndroidLayouts">
+    <shared>
+      <config />
+    </shared>
+    <layouts>
+      <layout url="file://$PROJECT_DIR$/project_android/app/src/main/res/layout/activity_planning.xml">
+        <config>
+          <theme>@style/Theme.Project_android</theme>
+        </config>
+      </layout>
+      <layout url="file://$PROJECT_DIR$/project_android/app/src/main/res/layout/fragment_planning.xml">
+        <config>
+          <theme>@style/Theme.Project_android</theme>
+        </config>
+      </layout>
+      <layout url="file://$PROJECT_DIR$/project_android/app/src/main/res/layout/item_date_page.xml">
+        <config>
+          <theme>@style/Theme.Project_android</theme>
+        </config>
+      </layout>
+    </layouts>
+  </component>
   <component name="AutoImportSettings">
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e29f201f-91af-40b8-b183-779ee5b41cc2" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/SchedulePagerAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/SchedulePagerAdapter.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/deploymentTargetSelector.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/DatePageAdapter.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/PlanningFragment.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/PlanningPagerAdapter.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/project_android/app/src/main/res/layout/fragment_planning.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/project_android/app/src/main/res/layout/item_date_page.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/PlanningActivity.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/project_android/app/src/main/java/com/example/project_android/ScheduleFragment.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/project_android/app/src/main/res/layout/activity_planning.xml" beforeDir="false" afterPath="$PROJECT_DIR$/project_android/app/src/main/res/layout/activity_planning.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -15,6 +47,32 @@
   <component name="ClangdSettings">
     <option name="formatViaClangd" value="false" />
   </component>
+  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\Users\USER\.android\avd\Medium_Phone_API_35.avd)]" />
+  <component name="ExternalProjectsData">
+    <projectState path="$PROJECT_DIR$/project_android">
+      <ProjectState />
+    </projectState>
+  </component>
+  <component name="ExternalProjectsManager">
+    <system id="GRADLE">
+      <state>
+        <projects_view>
+          <tree_state>
+            <expand />
+            <select />
+          </tree_state>
+        </projects_view>
+      </state>
+    </system>
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Kotlin Class" />
+        <option value="layoutResourceFile" />
+      </list>
+    </option>
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
@@ -22,6 +80,9 @@
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 5
@@ -31,18 +92,93 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.cidr.known.project.marker": "true",
-    "RunOnceActivity.readMode.enableVisualFormatting": "true",
-    "cf.first.check.clang-format": "false",
-    "cidr.known.project.marker": "true",
-    "git-widget-placeholder": "newbranch",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/huapi/OneDrive/Documents/GitHub/software-project"
-  }
-}]]></component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Android App.project_android.app.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
+    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
+    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/USER/Desktop/Android Studio/software-project/project_android/settings.gradle.kts&quot;
+  },
+  &quot;keyToStringList&quot;: {
+    &quot;kotlin-gradle-user-dirs&quot;: [
+      &quot;C:\\Users\\USER\\.gradle&quot;
+    ]
+  }
+}</component>
+  <component name="RunManager">
+    <configuration name="project_android.app" type="AndroidRunConfigurationType" factoryName="Android App" activateToolWindowBeforeRun="false">
+      <module name="project_android.app.main" />
+      <option name="DEPLOY" value="true" />
+      <option name="DEPLOY_APK_FROM_BUNDLE" value="false" />
+      <option name="DEPLOY_AS_INSTANT" value="false" />
+      <option name="ARTIFACT_NAME" value="" />
+      <option name="PM_INSTALL_OPTIONS" value="" />
+      <option name="ALL_USERS" value="false" />
+      <option name="ALWAYS_INSTALL_WITH_PM" value="false" />
+      <option name="CLEAR_APP_STORAGE" value="false" />
+      <option name="DYNAMIC_FEATURES_DISABLED_LIST" value="" />
+      <option name="ACTIVITY_EXTRA_FLAGS" value="" />
+      <option name="MODE" value="default_activity" />
+      <option name="CLEAR_LOGCAT" value="false" />
+      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
+      <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
+      <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
+      <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
+      <option name="DEBUGGER_TYPE" value="Auto" />
+      <Auto>
+        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
+        <option name="SHOW_STATIC_VARS" value="true" />
+        <option name="WORKING_DIR" value="" />
+        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
+        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
+        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
+        <option name="DEBUG_SANDBOX_SDK" value="false" />
+      </Auto>
+      <Hybrid>
+        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
+        <option name="SHOW_STATIC_VARS" value="true" />
+        <option name="WORKING_DIR" value="" />
+        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
+        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
+        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
+        <option name="DEBUG_SANDBOX_SDK" value="false" />
+      </Hybrid>
+      <Java>
+        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
+        <option name="DEBUG_SANDBOX_SDK" value="false" />
+      </Java>
+      <Native>
+        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
+        <option name="SHOW_STATIC_VARS" value="true" />
+        <option name="WORKING_DIR" value="" />
+        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
+        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
+        <option name="ATTACH_ON_WAIT_FOR_DEBUGGER" value="false" />
+        <option name="DEBUG_SANDBOX_SDK" value="false" />
+      </Native>
+      <Profilers>
+        <option name="ADVANCED_PROFILING_ENABLED" value="false" />
+        <option name="STARTUP_PROFILING_ENABLED" value="false" />
+        <option name="STARTUP_CPU_PROFILING_ENABLED" value="false" />
+        <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Java/Kotlin Method Sample (legacy)" />
+        <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
+        <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
+      </Profilers>
+      <option name="DEEP_LINK" value="" />
+      <option name="ACTIVITY_CLASS" value="" />
+      <option name="SEARCH_ACTIVITY_IN_GLOBAL_SCOPE" value="false" />
+      <option name="SKIP_ACTIVITY_VALIDATION" value="false" />
+      <method v="2">
+        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
Index: project_android/app/src/main/java/com/example/project_android/PlanningFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/java/com/example/project_android/PlanningFragment.kt b/project_android/app/src/main/java/com/example/project_android/PlanningFragment.kt
new file mode 100644
--- /dev/null	
+++ b/project_android/app/src/main/java/com/example/project_android/PlanningFragment.kt	
@@ -0,0 +1,111 @@
+//package com.example.project_android
+//
+//import android.app.AlertDialog
+//import android.os.Bundle
+//import android.view.LayoutInflater
+//import android.view.View
+//import android.view.ViewGroup
+//import android.widget.EditText
+//import android.widget.LinearLayout
+//import android.widget.TextView
+//import androidx.fragment.app.Fragment
+//import com.google.android.material.floatingactionbutton.FloatingActionButton
+//
+//class PlanningFragment : Fragment() {
+//    private lateinit var dateTextView: TextView
+//    private lateinit var scheduleListContainer: LinearLayout
+//    private lateinit var addButton: FloatingActionButton
+//    private var date: String? = null
+//    private lateinit var editText: EditText
+//
+//    override fun onCreate(savedInstanceState: Bundle?) {
+//        super.onCreate(savedInstanceState)
+//        date = arguments?.getString(ARG_DATE)
+//    }
+//
+////    override fun onCreateView(
+////        inflater: LayoutInflater, container: ViewGroup?,
+////        savedInstanceState: Bundle?
+////    ): View? {
+////        val view = inflater.inflate(R.layout.fragment_planning, container, false)
+////        dateTextView = view.findViewById(R.id.date_text_view)
+////        scheduleListContainer = view.findViewById(R.id.schedule_list_container)
+////        addButton = view.findViewById(R.id.add_plan_button)
+////
+////        dateTextView.text = date
+////
+////        addButton.setOnClickListener {
+////            showCreatePlanDialog()
+////        }
+////
+////        return view
+////    }
+//    override fun onCreateView(
+//        inflater: LayoutInflater, container: ViewGroup?,
+//        savedInstanceState: Bundle?
+//    ): View? {
+//        val view = inflater.inflate(R.layout.fragment_planning, container, false)
+//
+////        // 正確的引用方式
+////        editText = view.findViewById(R.id.plan_name)
+////
+////        // 設定可存取性與自動填充選項
+////        editText.isImportantForAccessibility = View.IMPORTANT_FOR_ACCESSIBILITY_NO
+////        editText.setImportantForAutofill(View.IMPORTANT_FOR_AUTOFILL_NO)
+//        // 使用 view.findViewById 正確引用 UI 元素
+//        dateTextView = view.findViewById(R.id.date_text_view)
+//        scheduleListContainer = view.findViewById(R.id.schedule_list_container)
+//        addButton = view.findViewById(R.id.add_plan_button)
+//
+//        // 設置日期
+//        dateTextView.text = date
+//
+//        // 點擊按鈕時顯示創建計劃對話框
+//        addButton.setOnClickListener {
+//            showCreatePlanDialog()
+//        }
+//
+//        return view
+//    }
+//
+//
+//
+//    private fun showCreatePlanDialog() {
+////        val editText = findViewById<EditText>(R.id.plan_name)
+////        editText.isImportantForAccessibility = View.IMPORTANT_FOR_ACCESSIBILITY_NO
+////        editText.setImportantForAutofill(View.IMPORTANT_FOR_AUTOFILL_NO)
+//
+//
+//        val dialogView = layoutInflater.inflate(R.layout.dialog_create_plan, null)
+//        val dialog = AlertDialog.Builder(requireContext())
+//            .setTitle("新增行程")
+//            .setView(dialogView)
+//            .setPositiveButton("新增") { _, _ ->
+//                val planName = dialogView.findViewById<EditText>(R.id.plan_name).text.toString()
+//                addPlanToContainer(planName)
+//            }
+//            .setNegativeButton("取消", null)
+//            .create()
+//
+//        dialog.show()
+//    }
+//
+//    private fun addPlanToContainer(planName: String) {
+//        val planView = layoutInflater.inflate(R.layout.activity_planning_part_of_item, scheduleListContainer, false)
+//        planView.findViewById<TextView>(R.id.plan_name_text).text = planName
+//        planView.findViewById<TextView>(R.id.date_text).text = date
+//        scheduleListContainer.addView(planView)
+//    }
+//
+//    companion object {
+//        private const val ARG_DATE = "ARG_DATE"
+//
+//        fun newInstance(date: String): PlanningFragment {
+//            val fragment = PlanningFragment()
+//            val args = Bundle()
+//            args.putString(ARG_DATE, date)
+//            fragment.arguments = args
+//            return fragment
+//        }
+//    }
+//}
Index: project_android/app/src/main/res/layout/fragment_planning.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project_android/app/src/main/res/layout/fragment_planning.xml b/project_android/app/src/main/res/layout/fragment_planning.xml
new file mode 100644
--- /dev/null	
+++ b/project_android/app/src/main/res/layout/fragment_planning.xml	
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+<!--    <LinearLayout-->
+<!--        xmlns:android="http://schemas.android.com/apk/res/android"-->
+<!--        android:layout_width="match_parent"-->
+<!--        android:layout_height="match_parent"-->
+<!--        android:orientation="vertical"-->
+<!--        android:padding="16dp">-->
+
+<!--        <TextView-->
+<!--            android:id="@+id/date_text_view"-->
+<!--            android:layout_width="wrap_content"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:textSize="18sp" />-->
+
+<!--        <LinearLayout-->
+<!--            android:id="@+id/schedule_list_container"-->
+<!--            android:layout_width="match_parent"-->
+<!--            android:layout_height="0dp"-->
+<!--            android:orientation="vertical"-->
+<!--            android:layout_weight="1" />-->
+
+<!--        <com.google.android.material.floatingactionbutton.FloatingActionButton-->
+<!--            android:id="@+id/add_plan_button"-->
+<!--            android:layout_width="wrap_content"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:layout_gravity="end"-->
+<!--            android:src="@drawable/ic_add"-->
+<!--            android:contentDescription="新增行程" />-->
+<!--    </LinearLayout>-->
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+
